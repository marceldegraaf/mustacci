#!/usr/bin/env ruby

path, url, sha, *_ = *ARGV.reverse

class BuildFailed < RuntimeError
end

def log(message)
  $stderr.puts "\e[33m[#{Time.now}] #{message}\e[0m"
end

def exe(command)
  log command
  system command
  raise BuildFailed, "Command failed: #{command.inspect}" if $?.to_i != 0
end

def run(path, url, sha)

  unless File.exist?(path)
    exe "git clone #{url} #{path}"
  end

  Dir.chdir path do

    exe "git clean -fdx"
    exe "git fetch"
    exe "git checkout #{sha} -q"

    if File.exist?(".mustacci")
      exe "./.mustacci"
    elsif File.exist?("Gemfile")
      exe "gem install bundler"
      exe "bundle install"
      exe "bundle exec rake"
    else
      exe "rake"
    end

    exe "git notes --ref=mustacci add -m 'Build successful (#{Time.now})' #{sha}"
    exe "git push origin refs/notes/mustacci"

  end
end

begin
  run(path, url, sha)
rescue BuildFailed => error
  $stderr.puts "\e[31m#{error}\e[0m"
  Dir.chdir path do
    exe "git notes --ref=mustacci add -fm 'Build failed (#{Time.now})' #{sha}"
    exe "git push origin refs/notes/mustacci"
  end
end
